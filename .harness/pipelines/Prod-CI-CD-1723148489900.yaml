pipeline:
  identifier: Build_teshruparelll_Prod_CI_CD_1723148492595
  name: Build Prod-CI-CD
  orgIdentifier: default
  projectIdentifier: ProdCICD
  properties:
    ci:
      codebase:
        connectorRef: ronakforgit
        repoName: Prod-CI-CD
        build: <+input>
  stages:
    - stage:
        identifier: build_test_and_run
        type: CI
        name: build
        spec:
          cloneCodebase: true
          repoName: Prod-CI-CD
          execution:
            steps:
              - step:
                  identifier: Code_compile
                  type: Run
                  name: Code compile
                  spec:
                    connectorRef: account.harnessImage
                    image: python:3.10.6-alpine
                    shell: Sh
                    command: python -m compileall ./
              - step:
                  identifier: Create_image
                  type: Run
                  name: Create image
                  spec:
                    connectorRef: account.harnessImage
                    image: alpine
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      FROM python:3.10.6-alpine
                      WORKDIR /py-sample-proj
                      ADD . /py-sample-proj
                      RUN pip install -r requirements.txt
                      ENTRYPOINT ["python", "app.py"]
                      EOM
                      cat pythondockerfile
              - step:
                  identifier: Build_and_Push_an_image_to_docker_registry
                  type: BuildAndPushDockerRegistry
                  name: Build and Push an image to docker registry
                  spec:
                    connectorRef: <+input>
                    repo: <+input>
                    tags:
                      - latest
                    dockerfile: pythondockerfile
                    optimize: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: Kubernetes
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        variables:
          - name: container
            type: String
            description: ""
            value: docker
    - stage:
        identifier: test
        type: CI
        name: test
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  identifier: curl
                  type: Run
                  name: curl
                  spec:
                    connectorRef: account.harnessImage
                    image: curlimages/curl
                    shell: Sh
                    command: |-
                      echo " <+matrix.testos> "
                      curl localhost:5000
                  strategy:
                    matrix:
                      testos:
                        - macos
                        - windows
                        - linux
                    maxConcurrency: 3
          serviceDependencies:
            - identifier: docker
              type: Service
              name: docker
              spec:
                connectorRef: <+input>
                image: <+input>
                imagePullPolicy: Always
          infrastructure:
            useFromStage: build_test_and_run
        variables:
          - name: container
            type: String
            description: ""
            value: docker
    - stage:
        identifier: DEV_ENV
        type: Deployment
        name: DEV ENV
        description: ""
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: microservice
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: docker image artifact
                      sources:
                        - identifier: docker image artifact
                          type: DockerRegistry
                          spec:
                            tag: <+input>
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: dev
          execution:
            steps:
              - step:
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  name: Rollout Deployment
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  name: Rollback Rollout Deployment
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        identifier: Prod_Approval
        type: Approval
        name: UAT Approval
        description: ""
        spec:
          execution:
            steps:
              - step:
                  identifier: prod_approval
                  type: HarnessApproval
                  name: UAT approval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                        - org._organization_all_users
                    approverInputs:
                      - name: release No
                        defaultValue: ""
                    isAutoRejectEnabled: false
        tags: {}
    - stage:
        identifier: UAT_ENV
        type: Deployment
        name: UAT ENV
        description: ""
        spec:
          deploymentType: Kubernetes
          service:
            useFromStage:
              stage: DEV_ENV
          environment:
            environmentRef: UAT
            deployToAll: false
            infrastructureDefinitions:
              - identifier: UAT
          execution:
            steps:
              - step:
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  name: Rollout Deployment
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  name: Rollback Rollout Deployment
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        identifier: UAT_Approval
        type: Approval
        name: Prod Approval
        description: ""
        spec:
          execution:
            steps:
              - step:
                  identifier: create_a_issue
                  type: JiraCreate
                  name: create a issue
                  spec:
                    connectorRef: account.Jira
                    projectKey: SI
                    issueType: Task
                    fields:
                      - name: Reporter
                        value: pdt.tesh@gmail.com
                      - name: Summary
                        value: UAT Approval
                  timeout: 1d
              - step:
                  identifier: approve_the_issue
                  type: JiraApproval
                  name: approve the issue
                  spec:
                    connectorRef: account.Jira
                    issueKey: create_a_issue
                    approvalCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions:
                          - key: Status
                            operator: equals
                            value: Approved
                    rejectionCriteria:
                      type: KeyValues
                      spec:
                        matchAnyCondition: true
                        conditions: []
                    projectKey: SI
                    issueType: Task
                    retryInterval: 1m
                  timeout: 1d
        tags: {}
    - parallel:
        - stage:
            identifier: Prod_1_ENV
            type: Deployment
            name: Prod 1 ENV
            description: ""
            spec:
              deploymentType: Kubernetes
              service:
                useFromStage:
                  stage: DEV_ENV
              environment:
                environmentRef: PROD1
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: PROD1
              execution:
                steps:
                  - step:
                      identifier: rolloutDeployment
                      type: K8sRollingDeploy
                      name: Rollout Deployment
                      timeout: 10m
                      spec:
                        skipDryRun: false
                        pruningEnabled: false
                rollbackSteps:
                  - step:
                      identifier: rollbackRolloutDeployment
                      type: K8sRollingRollback
                      name: Rollback Rollout Deployment
                      timeout: 10m
                      spec:
                        pruningEnabled: false
            tags: {}
            failureStrategies:
              - onFailure:
                  errors:
                    - AllErrors
                  action:
                    type: StageRollback
        - stage:
            identifier: PROD_Can
            type: Deployment
            name: PROD 2 ENV
            description: ""
            spec:
              deploymentType: Kubernetes
              service:
                useFromStage:
                  stage: DEV_ENV
              environment:
                environmentRef: PROD2
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: PROD2
              execution:
                steps:
                  - stepGroup:
                      identifier: canaryDepoyment
                      name: Canary Deployment
                      steps:
                        - step:
                            identifier: canaryDeployment
                            type: K8sCanaryDeploy
                            name: Canary Deployment
                            timeout: 10m
                            spec:
                              instanceSelection:
                                type: Count
                                spec:
                                  count: 1
                              skipDryRun: false
                        - step:
                            identifier: canaryDelete
                            type: K8sCanaryDelete
                            name: Canary Delete
                            timeout: 10m
                            spec: {}
                  - stepGroup:
                      identifier: primaryDepoyment
                      name: Primary Deployment
                      steps:
                        - step:
                            identifier: rollingDeployment
                            type: K8sRollingDeploy
                            name: Rolling Deployment
                            timeout: 10m
                            spec:
                              skipDryRun: false
                rollbackSteps:
                  - step:
                      identifier: rollbackCanaryDelete
                      type: K8sCanaryDelete
                      name: Canary Delete
                      timeout: 10m
                      spec: {}
                  - step:
                      identifier: rollingRollback
                      type: K8sRollingRollback
                      name: Rolling Rollback
                      timeout: 10m
                      spec: {}
            tags: {}
            failureStrategies:
              - onFailure:
                  errors:
                    - AllErrors
                  action:
                    type: StageRollback
    - stage:
        identifier: update_jira
        type: Approval
        name: update jira
        description: ""
        spec:
          execution:
            steps:
              - step:
                  identifier: update_issue_to_done
                  type: JiraUpdate
                  name: update issue to done
                  timeout: 5m
                  spec:
                    connectorRef: account.Jira
                    issueKey: <+pipeline.stages.UAT_Approval.spec.execution.steps.create_a_issue.issue.id>
                    fields: []
        tags: {}
  variables: []
  notificationRules:
    - identifier: Pipeline_Notification
      name: Pipeline Notification
      pipelineEvents:
        - type: StageFailed
          forStages:
            - build_test_and_run
            - test
            - DEV_ENV
            - UAT_Approval
            - UAT_ENV
            - Prod_Approval
            - Prod_1_ENV
            - Prod2_Env
        - type: StageSuccess
          forStages:
            - build_test_and_run
            - test
            - DEV_ENV
            - UAT_Approval
            - UAT_ENV
            - Prod_Approval
            - Prod_1_ENV
            - Prod2_Env
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - youremail@.com
      enabled: true
